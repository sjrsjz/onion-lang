@required stdlib;
stdlib.io.println("双引号字符串");
stdlib.io.println('单引号字符串');
stdlib.io.println("字符串中的双引号: \"Hello, World!\"");
stdlib.io.println('字符串中的单引号: \'Hello, World!\'');
stdlib.io.println("字符串中的转义字符: \\n换行符, \\t制表符");
stdlib.io.println("字符串中的反斜杠: \\\\");
stdlib.io.println("字符串中的Unicode字符: \u6b63\u5e38\u5b57\u7b26\u4e32");
stdlib.io.println("""多行字符串""");
stdlib.io.println('''多行字符串''');
stdlib.io.println("字符串拼接: " + "Hello, " + "World!");
stdlib.io.println(R"(原始字符串: \n不需要转义字符，直接使用\n和\t等)");

stdlib.io.println("整数：", 42);
stdlib.io.println("十六进制整数：", 0x2A);
stdlib.io.println("八进制整数：", 0o52);
stdlib.io.println("浮点数：", 3.14);
stdlib.io.println("布尔值：", true);
stdlib.io.println("布尔值：", false);
stdlib.io.println("空值：", null);
stdlib.io.println("未定义值：", undefined);

stdlib.io.println("元组：", (1, 2, 3));
stdlib.io.println("元组长度：", (1, 2, 3).length());
stdlib.io.println("携带方法的元组：", (1, 2, 3, length => () -> "method").length());

stdlib.io.println("内置类型转换：", "42".int());

int := (x?) -> x.int();
abs := (x?) -> +x;
stdlib.io.println("自定义类型转换：", "-42" as int as abs);