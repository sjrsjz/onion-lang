@required stdlib;

stdlib.io.println("======== HTTP模块完整测试 ========");

// 测试GET请求
stdlib.io.println("\n1. 测试GET请求:");
get_request := stdlib.http.get("https://httpbin.org/get");
get_result := mut undefined;

get_task := () -> {
    (sync () -> {
        get_result = get_request();
    })();
};

(async get_task)();
stdlib.io.println("GET结果:", get_result);

// 测试POST请求
stdlib.io.println("\n2. 测试POST请求:");
post_request := stdlib.http.post(
    "https://httpbin.org/post",
    "{\"name\":\"test\", \"value\":123}"
);
post_result := mut undefined;

post_task := () -> {
    (sync () -> {
        post_result = post_request();
    })();
};

(async post_task)();
stdlib.io.println("POST结果:", post_result);

// 测试PUT请求
stdlib.io.println("\n3. 测试PUT请求:");
put_request := stdlib.http.put(
    "https://httpbin.org/put",
    "{\"id\":1, \"name\":\"updated\"}"
);
put_result := mut undefined;

put_task := () -> {
    (sync () -> {
        put_result = put_request();
    })();
};

(async put_task)();
stdlib.io.println("PUT结果:", put_result);

// 测试DELETE请求
stdlib.io.println("\n4. 测试DELETE请求:");
delete_request := stdlib.http.delete("https://httpbin.org/delete");
delete_result := mut undefined;

delete_task := () -> {
    (sync () -> {
        delete_result = delete_request();
    })();
};

(async delete_task)();
stdlib.io.println("DELETE结果:", delete_result);

// 测试通用请求方法
stdlib.io.println("\n5. 测试通用请求方法:");
custom_request := stdlib.http.request(
    "https://httpbin.org/patch",
    "PATCH",
    {},
    "{\"patch\":\"data\"}"
);
custom_result := mut undefined;

custom_task := () -> {
    (sync () -> {
        custom_result = custom_request();
    })();
};

(async custom_task)();
stdlib.io.println("PATCH结果:", custom_result);

stdlib.io.println("\n======== HTTP测试完成 ========");
